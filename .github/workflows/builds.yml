name: Builds

on: push

env:
  LIBNAME: gdsodium

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-macos
  cancel-in-progress: true

jobs:
  build:
    runs-on:  ${{matrix.os}}
    name: ${{matrix.name}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: windows-debug
            os: ubuntu-latest
            name: üèÅ Windows Debug
            runner: ubuntu-22.04
            target: template_debug
            platform: windows
            arch: x86_64
            compile_args: sodium_use_zig=yes
          - identifier: windows-release
            os: ubuntu-latest
            name: üèÅ Windows Release
            runner: ubuntu-22.04
            target: template_release
            platform: windows
            compile_args: sodium_use_zig=yes
            arch: x86_64
          - identifier: macos-debug
            os: macos-latest
            name: üçé macOS (universal) Debug
            target: template_debug
            platform: macos
            arch: universal
          - identifier: macos-release
            os: macos-latest
            name: üçé macOS (universal) Release
            target: template_release
            platform: macos
            arch: universal
          - identifier: linux-debug
            os: ubuntu-latest
            name: üêß Linux Debug
            runner: ubuntu-20.04
            target: template_debug
            platform: linux
            compile_args: coverage=yes
            arch: x86_64
          - identifier: linux-release
            os: ubuntu-latest
            name: üêß Linux Release
            runner: ubuntu-20.04
            target: template_release
            platform: linux
            arch: x86_64

    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Set up SCons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          scons --version
      - name: Linux base dependencies
        if: ${{ matrix.platform == 'linux' || matrix.platform == 'windows' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq build-essential pkg-config
      - name: Setup MinGW for Windows/MinGW build
        if: ${{ matrix.platform == 'windows' }}
        run: |
          sudo apt-get install -qqq mingw-w64
      - name: Setup Zig for Windows
        if: ${{ matrix.platform == 'windows' }}
        uses: goto-bus-stop/setup-zig@v2.2.0
        with:
          version: 0.11.0

      - name: Compile
        shell: sh
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}' ${{ matrix.compile_args }}

      - name: Run tests (Linux debug)
        if: ${{ matrix.platform == 'linux' && matrix.target == 'template_debug' }}
        uses: croconut/godot-tester@v5
        with:
          version: "4.2.1"
          path: "demo"

      - name: Run coverage and rebuild (Linux debug)
        if: ${{ matrix.platform == 'linux' && matrix.target == 'template_debug' }}
        shell: sh
        run: |
          bash coverage.sh
          mv coverage/ extension/
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}'


      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}
          path: |
            ${{ github.workspace }}/extension/*
      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: '${{ env.LIBNAME }}.${{ matrix.platform }}.${{ matrix.arch }}.zip'
          path: '${{ github.workspace }}/extension/'
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

      - name: Create and upload asset
        if: success() && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "${{ env.LIBNAME }}.${{ matrix.platform }}.${{ matrix.arch }}.zip"
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          token: ${{ secrets.GITHUB_TOKEN }}
